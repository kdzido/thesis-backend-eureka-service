buildscript {
    ext {
        springBootVersion = '1.5.10.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE')
        classpath 'com.bmuschko:gradle-docker-plugin:3.2.4'
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.docker-remote-api'

import org.apache.tools.ant.filters.*
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

sourceCompatibility = 1.8
targetCompatibility = 1.8

group 'pl.pja.13868.news'
version '0.1.1'

repositories {
    mavenLocal()
    // TODO own repo (cloud | private)
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Edgware.SR2"
    }
}

dependencies {
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.cloud:spring-cloud-starter-eureka-server')

    testCompile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.spockframework:spock-core:${spockVersion}"
    testCompile("cglib:cglib-nodep:${cglibVersion}")

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

task createBuildInfoFile << {
    def buildInfo = new File("$buildDir/build-info.properties")
    def properties = new Properties()
    properties.setProperty("version", project.version.toString())
//    properties.setProperty("timestamp", project.buildTimestamp) // TODO timestamp
    properties.store(buildInfo.newWriter(), null)
}

jar {
    dependsOn createBuildInfoFile
    baseName = 'eureka-service'

    from(buildDir) {
        include 'build-info.properties'
        into('META-INF/')
    }
}

task copyJars(dependsOn: jar, type: Copy) {
    from jar
    into "$buildDir/dockerfile"
}

task copyDockerFiles(dependsOn: [copyJars], type: Copy) {
    from 'src/docker'
    into "$buildDir/dockerfile"

    String springBootJar = "eureka-service-${project.version}.jar"
    filter(ReplaceTokens, tokens: [springBootJar: springBootJar])
}

docker {
    registryCredentials {
        username = System.env.DOCKERHUB_CREDS_USR
        password = System.env.DOCKERHUB_CREDS_PSW
    }
}

// TODO use DockerApplication with Boot
task buildDockerImage(type: DockerBuildImage) {
    dependsOn copyDockerFiles
    inputDir = project.file("$buildDir/dockerfile/Dockerfile").parentFile
    // TODO include build-info.properties

    String dockerTag = System.env.PIPELINE_BUILD_ID ?: "snapshot"
    tag = "qu4rk/thesis-eurekaservice:${dockerTag}"
}

task pushDockerImage(type: DockerPushImage) {
    dependsOn buildDockerImage
    imageName = "qu4rk/thesis-eurekaservice"
}


// TODO publish to artifactory?
